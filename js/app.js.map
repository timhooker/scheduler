{"version":3,"sources":["listings-page.js","nav_buttons.js","weatherapi.js","app.js","appointment-store.js","appointment.js","main.js","page-manager.js"],"names":["listingsPageButtons","$","on","aptListing","this","aptId","closest","data","aptIndex","app","aptManager","findById","appointments","query","off","manager","goTo","GetFutureWeather","deleteBtn","appt","confirmDelete","children","fadeIn","remove","index","fadeOut","navButtons","attr","GetLocalWeather","apptIndex","JSONP_LocalWeather","input","url","_PremiumApiBaseURL","format","extra","num_of_days","date","fx","tp","cc","includelocation","show_comments","showlocaltime","_PremiumApiKey","jsonP","callback","ajax","type","async","contentType","jsonpCallback","dataType","success","console","dir","error","e","log","message","localWeatherInput","myip","textContent","replace","dateAr","split","monthNum","indexOf","String","toLowerCase","newDate","dateMatch","city","state","qstr","pm","apptTime","substring","futureTempF","futureDesc","Number","done","weather","i","length","hourly","time","tempF","weatherDesc","value","fail","LocalWeatherCallback","localWeather","d","Date","currentTime","toLocaleTimeString","weatherContainer","output","cloud","sun","rain","snow","night","currentHour","current_condition","temp_F","css","html","AppointmentStore","collection","JSON","parse","localStorage","getItem","storeLocal","setItem","stringify","self","add","obj","arrayIndex","splice","push","objId","objIndex","forEach","apt","clear","Appointment","spec","currentAptId","title","trim","street","zip","address","now","equal","otherUser","registerPages","registerPage","pageID","listingArr","sort","a","b","append","views","appointment","createApptFromForm","newApt","newAppt","val","resetApptForm","focus","pickatime","pickadate","isHappy","fields",".appt-edit-title","required",".appt-edit-date",".appt-edit-time","PageManager","isHome","isPageLoad","pages","name","currentPage","first","newPage","addClass","setTimeout","removeClass","each","elem","_","template","variable"],"mappings":"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","file":"app.js","sourcesContent":["function listingsPageButtons() {\n\n  $('.appt').on('click', '.appt-details', function() {\n    // clicking on appt brings up the view page\n    var aptListing = $(this);\n    // find the ID of the object\n    var aptId = aptListing.closest('.appt').data('id');\n    // find the index of the object\n    var aptIndex = app.aptManager.findById(aptId);\n    // get the object store\n    var appointments = app.aptManager.query();\n    // show the appropriate page\n    $('.appt').off('click', '.appt-details');\n    app.manager.goTo('view', appointments[aptIndex]);\n    GetFutureWeather();\n  });\n\n  $('.appt').on('click', '.appt-delete-btn', function() {\n    // clicking on delete brings up the delete prompt\n    var deleteBtn = $(this);\n    var appt = deleteBtn.closest('.appt');\n    var aptId = appt.data('id');\n    var confirmDelete = appt.children('.appt-delete');\n    // show the delete\n    confirmDelete.fadeIn('fast');\n    // confirm delete to remove\n    confirmDelete.children('.appt-confirm-delete').on('click', function() {\n      appt.remove();\n      var index = app.aptManager.findById(aptId);\n      app.aptManager.remove(index);\n    });\n    // if cancelled, remove\n    confirmDelete.children('.appt-cancel-delete').on('click', function() {\n      confirmDelete.fadeOut('fast');\n    });\n  });\n}\n","function navButtons() {\n  $('.appt-nav').on('click', '.add-btn', function() {\n    $('.add-btn').attr('disabled');\n    app.manager.goTo('edit', {});\n  });\n\n  $('.appt-nav').on('click', '.weather-btn', function () {\n    $('.add-btn').attr('disabled');\n    app.manager.goTo('weather');\n    GetLocalWeather();\n  });\n\n  $('.appt-nav').on('click', '.back-btn', function() {\n    app.manager.goTo('listing');\n    $('.appt-nav').off('click', '.back-btn');\n  });\n\n  $('.appt-nav').on('click', '.edit-btn', function() {\n    var aptId = $('.page').data('id');\n    var apptIndex = app.aptManager.findById(aptId);\n    var appointments = app.aptManager.query();\n\n    app.manager.goTo('edit', appointments[apptIndex]);\n    $('.appt-nav').off('click', '.edit-btn');\n\n  });\n}\n","var _PremiumApiBaseURL = 'http://api.worldweatheronline.com/free/v2/';\r\n/*\r\n    Please change the PremiumAPIKey to your own.\r\n    These keys have been provided for testing only.\r\n    If you don't have one, then register now: http://developer.worldweatheronline.com/member/register\r\n*/\r\nvar _PremiumApiKey = '903c1901cc5f963c3e4f0fcfe3e95';\r\n\r\n// -------------------------------------------\r\n\r\nfunction JSONP_LocalWeather(input) {\r\n    var url = _PremiumApiBaseURL + 'weather.ashx?q=' + input.query + '&format=' + input.format + '&extra=' + input.extra + '&num_of_days=' + input.num_of_days + '&date=' + input.date + '&fx=' + input.fx + '&tp=' + input.tp + '&cc=' + input.cc + '&includelocation=' + input.includelocation + '&show_comments=' + input.show_comments + '&showlocaltime=' + input.showlocaltime + '&key=' + _PremiumApiKey;\r\n\r\n    jsonP(url, input.callback);\r\n}\r\n\r\n// -------------------------------------------\r\n\r\n// Helper Method\r\nfunction jsonP(url, callback) {\r\n    $.ajax({\r\n        type: 'GET',\r\n        url: url,\r\n        async: false,\r\n        contentType: \"application/json\",\r\n        jsonpCallback: callback,\r\n        dataType: 'jsonp',\r\n        success: function (json) {\r\n            console.dir('success');\r\n        },\r\n        error: function (e) {\r\n            console.log(e.message);\r\n            console.log('Did not work.');\r\n        }\r\n    });\r\n}\r\n\r\n//------------ LOCAL WEATHER ----------------\r\n\r\nfunction GetLocalWeather(e) {\r\n\r\n    var localWeatherInput = {\r\n        query: myip,\r\n        format: 'JSON',\r\n        num_of_days: '2',\r\n        date: '',\r\n        fx: '',\r\n        cc: '',\r\n        tp: '',\r\n        includelocation: '',\r\n        show_comments: '',\r\n        showlocaltime: 'yes',\r\n        callback: 'LocalWeatherCallback'\r\n    };\r\n\r\n    JSONP_LocalWeather(localWeatherInput);\r\n}\r\n\r\n//------------- Future Weather --------------\r\nvar newDate;\r\n\r\nfunction GetFutureWeather(e) {\r\n\r\n    var date = $('.appt-date')[0].textContent.replace(/,/g , '').replace(/ /g , '-');\r\n    var dateAr = date.split('-');\r\n    var day;\r\n    var monthNum = [\r\n      \"january\",\r\n      \"february\",\r\n      \"march\",\r\n      \"april\",\r\n      \"may\",\r\n      \"june\",\r\n      \"july\",\r\n      \"august\",\r\n      \"september\",\r\n      \"october\",\r\n      \"november\",\r\n      \"december\"\r\n    ].indexOf(String(dateAr[1]).toLowerCase()) + 1;\r\n\r\n    if (monthNum < 10) {\r\n      monthNum = '0' + String(monthNum);\r\n    }\r\n\r\n    if (dateAr[0] < 10) {\r\n      dateAr[0] = '0' + String(dateAr[0]);\r\n    }\r\n\r\n    newDate = dateAr[2] + '-' + monthNum + '-' + dateAr[0];\r\n\r\n    var city = $('.map').data('city');\r\n    var state = $('.map').data('state');\r\n    var qstr = String(city) + ',' + String(state);\r\n    var dateMatch;\r\n    var pm = $('.appt-time')[0].textContent.toLowerCase().indexOf('pm');\r\n    var apptTime = $('.appt-time')[0].textContent.substring(0,2).replace(/:/g , '0') + '0';\r\n    var futureTempF = '';\r\n    var futureIcon;\r\n    var futureDesc = '';\r\n\r\n    if (pm >= 0) {\r\n      apptTime = Number(apptTime) + 1200;\r\n    }\r\n\r\n    $.ajax(_PremiumApiBaseURL + 'weather.ashx?q=' + qstr + '&format=JSON' + '&key=' + _PremiumApiKey)\r\n      .done(function(data) {\r\n        console.log(data.data.weather);\r\n        for (i = 0; i < data.data.weather.length; ++i) {\r\n          if (data.data.weather[i].date === newDate) {\r\n            dateMatch = data.data.weather[i];\r\n          }\r\n        }\r\n        for (i = 0; i < dateMatch.hourly.length; ++i) {\r\n          if (dateMatch.hourly[i].time >= apptTime) {\r\n            futureTempF = String(dateMatch.hourly[i].tempF);\r\n            futureDesc = String(dateMatch.hourly[i].weatherDesc[0].value);\r\n\r\n            // $('.weather-forecast__icon')[0].textContent = futureIcon;\r\n            $('.weather-forecast__temp')[0].textContent = futureTempF + 'º';\r\n            $('.weather-forecast__desc')[0].textContent = futureDesc;\r\n          }\r\n        }\r\n      })\r\n      .fail(function(request, status, err) {\r\n        console.log('Failed to get weather');\r\n      });\r\n}\r\n\r\n//-------------------------------------------\r\n\r\nfunction LocalWeatherCallback(localWeather) {\r\n\r\n    var d = new Date();\r\n    var currentTime = d.toLocaleTimeString();\r\n    var pm = currentTime.toLowerCase().indexOf('pm');\r\n    var weatherContainer = $('.weather-container');\r\n    var output = '';\r\n    var cloud = 'img/cloud.jpg';\r\n    var sun = 'img/sun.jpg';\r\n    var rain = 'img/rain.jpg';\r\n    var snow = 'img/snow.jpg';\r\n    var night = 'img/night.jpg';\r\n    var currentHour = currentTime.substring(0,2).replace(/:/g , '');\r\n\r\n    output += '<p class=\"temp\">' + localWeather.data.current_condition[0].temp_F + 'º' + '</p>';\r\n    output += '<p class=\"condition\">' + localWeather.data.current_condition[0].weatherDesc[0].value + '</p>';\r\n\r\n    // Conditional Background based on weather conditions\r\n\r\n    if (localWeather.data.current_condition[0].weatherDesc[0].value.toLowerCase().indexOf('cloud') >= 0 || localWeather.data.current_condition[0].weatherDesc[0].value.toLowerCase().indexOf('over') >= 0 || localWeather.data.current_condition[0].weatherDesc[0].value.toLowerCase().indexOf('cast') >= 0) {\r\n      weatherContainer.css('background-image', 'url(' + cloud + ')');\r\n      weatherContainer.css('color', 'aliceblue');\r\n    }\r\n    if (localWeather.data.current_condition[0].weatherDesc[0].value.toLowerCase().indexOf('sun') >= 0 || localWeather.data.current_condition[0].weatherDesc[0].value.toLowerCase().indexOf('clear') >= 0 || localWeather.data.current_condition[0].weatherDesc[0].value.toLowerCase().indexOf('shine') >= 0) {\r\n      weatherContainer.css('background-image', 'url(' + sun + ')');\r\n      weatherContainer.css('color', 'rgb(255, 252, 0)');\r\n    }\r\n    if (localWeather.data.current_condition[0].weatherDesc[0].value.toLowerCase().indexOf('rain') >= 0 || localWeather.data.current_condition[0].weatherDesc[0].value.toLowerCase().indexOf('shower') >= 0 || localWeather.data.current_condition[0].weatherDesc[0].value.toLowerCase().indexOf('driz') >= 0 || localWeather.data.current_condition[0].weatherDesc[0].value.toLowerCase().indexOf('drop') >= 0) {\r\n      weatherContainer.css('background-image', 'url(' + rain + ')');\r\n      weatherContainer.css('color', 'rgb(65, 255, 0)');\r\n      weatherContainer.css('background-position', '89%');\r\n    }\r\n    if (localWeather.data.current_condition[0].weatherDesc[0].value.toLowerCase().indexOf('snow') >= 0 || localWeather.data.current_condition[0].weatherDesc[0].value.toLowerCase().indexOf('flur') >= 0) {\r\n      weatherContainer.css('background-image', 'url(' + snow + ')');\r\n      weatherContainer.css('background-position', '94%');\r\n      weatherContainer.css('color', 'white');\r\n    }\r\n\r\n    if ((Number(currentHour) >= 7) && (pm >= 0)) {\r\n      weatherContainer.css('background-image', 'url(' + night + ')');\r\n      weatherContainer.css('color', 'rgb(200, 199, 190)');\r\n      console.log('night time');\r\n    }\r\n\r\n    weatherContainer.html(output);\r\n}\r\n\r\n\r\n\r\n//-------------------------------------------\r\n","//The global namespace for the Docket\nvar app = {};\n","//Responsible for persisting the appointments\napp.AppointmentStore = function() {\n  //TODO: Create Store\n  //\n  var collection = JSON.parse(localStorage.getItem('collection')) || [];\n  //Should have at least these elements:\n  var storeLocal = function () {\n    localStorage.setItem('collection', JSON.stringify(collection));\n  };\n\n  var self = {\n    add: function(obj, arrayIndex) {\n      if (arrayIndex >= 0) {\n        collection.splice(arrayIndex, 1, obj);\n      } else {\n        collection.push(obj);\n      }\n      storeLocal();\n\n      return true;\n    },\n    query: function() {\n      return collection;\n    },\n    remove: function(index) {\n      collection.splice(index, 1);\n      storeLocal();\n\n      return collection;\n    },\n    findById: function(objId) {\n      // returns the index of the appointment by ID\n      var objIndex;\n\n      collection.forEach(function(apt, i){\n         if (Number(objId) === apt.aptId) {\n           objIndex = i;\n         }\n       });\n\n       return objIndex;\n    },\n    clear: function() {\n      localStorage.clear();\n    }\n  };\n  return self;\n};\n","//The appt constructur creates a new\n//appt\napp.Appointment = function (spec, currentAptId) {\n  //TODO Add Constructor Function\n  if (!spec.title || spec.title.trim() === '') {\n    throw 'Title is required';\n  } else if (!spec.date || spec.date.trim() === '') {\n    throw 'Date is required';\n  } else if (!spec.time || spec.time.trim() === '') {\n    throw 'Time is required';\n  }\n\n  return {\n    title: spec.title,\n    date: spec.date,\n    time: spec.time,\n    street: spec.street,\n    city: spec.city,\n    state: spec.state,\n    zip: spec.zip,\n    address: spec.street + \" \" + spec.city + \" \" + spec.state,\n    aptId: currentAptId || Date.now(),\n    equal: function (otherUser) {\n      return self.aptId === otherUser.aptId;\n    }\n  };\n};\n","$(function() {\n\n  app.registerPages = function() {\n    app.manager.registerPage('listing', function() {\n\n      var pageID = 'appt-listing';\n      var listingArr = app.aptManager.query();\n      //\n      // listingArr.sort(function(a,b) {\n      //   a = (a.time);\n      //   b = (b.time);\n      //   return a<b ? -1 : a>b ? 1 : 0;\n      // });\n\n      listingArr.sort(function(a, b) {\n        console.log(a.date + ' ' + a.time);\n\n        a = new Date(a.date + a.time);\n        b = new Date(b.date + a.time);\n        return a<b ? -1 : a>b ? 1 : 0;\n      });\n\n\n      $('.wrapper').append(\n        app.views['appt-listing']({ appointments: app.aptManager.query(), pageID: pageID }) );\n\n      navButtons();\n      listingsPageButtons();\n    });\n\n    app.manager.registerPage('weather', function() {\n\n      var pageID = 'appt-weather';\n\n      $('.wrapper').append(\n        app.views['appt-weather']({ pageID: pageID }) );\n\n      navButtons();\n    });\n\n    app.manager.registerPage('view', function(appt) {\n\n      var pageID = 'appt-view';\n      $('.wrapper').append(\n        app.views['appt-view']({ appointment: appt, pageID: pageID }) );\n\n      navButtons();\n    });\n\n    app.manager.registerPage('edit', function(appt) {\n\n      var pageID = 'appt-edit';\n      var appointments = app.aptManager.query();\n      var currentAptId = $('.page').data('id');\n      var apptIndex = app.aptManager.findById(currentAptId);\n      $('.wrapper').append(\n        app.views['appt-edit']({ appointment: appt, pageID: pageID }) );\n\n      navButtons();\n      $('.appt-edit-time').pickatime();\n      $('.appt-edit-date').pickadate();\n\n      // Give focus to the first input on load\n      $('.appt-edit-title').focus();\n\n      // Add Event Listener to Form\n      // Create appt variable from createApptFromForm function\n      // Add appt to datastore\n      $('.appt-edit-content').isHappy({\n\n        fields: {\n        // reference the field you're talking about, probably by `id`\n        // but you could certainly do $('[name=name]') as well.\n          '.appt-edit-title': {\n            required: true,\n            message: 'This event needs a title'\n          },\n          '.appt-edit-date': {\n            required: true,\n            message: 'A date is important for record keeping'\n          },\n          '.appt-edit-time': {\n            required: true,\n            message: 'Let\\'s add a time so you\\'re not late'\n          }\n\n        }\n      });\n\n      $('.appt-edit-content').on('submit', function() {\n        var appt = createApptFromForm();\n\n        if (appt) {\n          app.aptManager.add(appt, apptIndex);\n        }\n        resetApptForm();\n\n        return false;\n      });\n\n      function createApptFromForm() {\n        var newAppt = {\n          title: $('.appt-edit-title').val(),\n          date: $('.appt-edit-date').val(),\n          time: $('.appt-edit-time').val(),\n          street: $('.appt-edit-street').val(),\n          city: $('.appt-edit-city').val(),\n          state: $('.appt-edit-state').val(),\n        };\n        var newApt;\n        try {\n          newApt = app.Appointment(newAppt, currentAptId);\n        } catch(e) {\n          // show the catch error\n          console.log(e);\n          return;\n        }\n\n        return newApt;\n      }\n\n      // Resets the inputs in the user form\n      function resetApptForm() {\n        $('.appt-edit-content input').val('');\n        $('.appt-edit-content .appt-edit-title').focus();\n      }\n\n    });\n  };\n\n  // display appointments we have currently\n  app.manager = app.PageManager();\n  app.aptManager = app.AppointmentStore();\n  app.registerPages();\n  app.isHome = true;\n\n  // var appointments = app.aptManager.query();\n  app.manager.goTo('listing');\n\n});\n","app.PageManager = function (rootElement) {\n\n  //Grabbing all our templates and storing them\n  app.isPageLoad = true;\n\n  app.pages = {};\n\n  return {\n    registerPage: function (name, callback) {\n\n      // Where do we store the templates??\n      app.pages[name] = callback;\n    },\n\n    goTo: function(name, data) {\n      var currentPage = $('.page').first();\n      app.pages[name](data);\n      var newPage = $('#appt-' + name);\n\n      if(!app.isPageLoad) {\n          // is there a way to only remove the second class?\n        setTimeout(function() {\n          currentPage.removeClass('active');\n          newPage.addClass('active');\n          setTimeout(function() {\n            $('.page').first().remove();\n          }, 400);\n        }, 100);\n      } else {\n        newPage.addClass('active');\n        app.isPageLoad = false;\n      }\n    }\n  };\n};\napp.views = {};\n\n$('script[type=\"type/html\"]').each(function () {\n\n  var elem = $(this).remove();\n\n  app.views[elem.attr('id')] = _.template(elem.html(), { 'variable': 'm'});\n});\n"],"sourceRoot":"/source/"}