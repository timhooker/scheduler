{"version":3,"sources":["listings-page.js","nav_buttons.js","app.js","appointment-store.js","appointment.js","edit-appointment.js","list-appointments.js","main.js","page-manager.js","scheduler.js","view-appointment.js","weather.js"],"names":["listingsPageButtons","$","on","app","viewAppointment","navButtons","deleteBtn","this","appt","closest","aptId","data","confirmDelete","children","fadeIn","remove","index","aptManager","findById","console","log","fadeOut","editAppointment","listAppointments","AppointmentStore","collection","JSON","parse","localStorage","getItem","self","add","obj","push","query","splice","objId","objIndex","forEach","apt","i","Number","clear","Appointment","spec","title","date","time","street","cityState","address","Date","now","equal","otherUser","createApptFromForm","newAppt","val","resetApptForm","focus","appointments","pageID","html","views","appointment","submit","registerPages","manager","registerPage","PageManager","goTo","pages","name","callback","each","elem","attr","_","template","variable","listingsPageEvents","getJSON","done","K","list","main","temp","fail","request","status","err","alert"],"mappings":"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","file":"app.js","sourcesContent":["function listingsPageButtons() {\n\n  $('.appt').on('click', '.appt-details', function() {\n    // clicking on appt brings up the view page\n    app.viewAppointment();\n    navButtons();\n  });\n\n  $('.appt').on('click', '.appt-delete-btn', function() {\n    // clicking on delete brings up the delete prompt\n    var deleteBtn = $(this);\n    var appt = deleteBtn.closest('.appt');\n    var aptId = appt.data(\"id\");\n    var confirmDelete = appt.children('.appt-delete');\n    // show the delete\n    confirmDelete.fadeIn('fast');\n    // confirm delete to remove\n    confirmDelete.children('.appt-confirm-delete').on('click', function() {\n      appt.remove();\n      var index = app.aptManager.findById(aptId);\n      console.log(index);\n      app.aptManager.remove(index);\n    });\n    // if cancelled, remove\n    confirmDelete.children('.appt-cancel-delete').on('click', function() {\n      confirmDelete.fadeOut('fast');\n    });\n  });\n}\n","function navButtons() {\n  $('.appt-nav').on('click', '.add-btn', function() {\n    app.editAppointment();\n    navButtons();\n  });\n\n  $('.appt-nav').on('click', '.back-btn', function() {\n    app.listAppointments();\n    navButtons();\n    listingsPageButtons();\n  });\n\n  $('.appt-nav').on('click', '.edit-btn', function() {\n    app.editAppointment();\n    navButtons();\n  });\n}\n\n// function showSection(sectionID, direction) {\n//\n//   var newSection = $('#' + sectionID).html();\n//   var currentSection = $('.wrapper').children('.page').first();\n//   var newPage = 'inactive';\n//   var oldPage = 'previous';\n//   if (direction === 'left') {\n//     newPage = 'previous';\n//     oldPage = 'inactive';\n//   }\n//\n//   $('.wrapper').append(\n//     '<div id=\"' + sectionID + '\" class=\"page ' + newPage + '\">' +\n//     newSection +\n//     '</div>');\n//\n//   setTimeout(function() {\n//     $('#' + sectionID).removeClass( newPage );\n//     currentSection.addClass( oldPage );\n//\n//     setTimeout(function() {\n//       currentSection.remove();\n//     }, 300);\n//   }, 100);\n// }\n","//The global namespace for the Docket\nvar app = {};\n","//Responsible for persisting the appointments\napp.AppointmentStore = function() {\n  //TODO: Create Store\n  //\n  var sampleAppt = {\n    title: 'samples'\n  }\n\n  var collection = JSON.parse(localStorage.getItem('collection')) || [];\n  //Should have at least these elements:\n  var storeLocal = function () {\n    localStorage.setItem('collection', JSON.stringify(collection));\n  };\n\n  var self = {\n    add: function(obj) {\n      collection.push(obj);\n      return true;\n    },\n    query: function() {\n      return collection ;\n    },\n    remove: function(index) {\n      return collection.splice(index, 1);\n\n      storeLocal();\n      // return;\n    },\n    findById: function(objId) {\n      // returns the index of the appointment by ID\n      var objIndex;\n      collection.forEach(function(apt, i){\n         if (Number(objId) === apt.aptId) {\n           objIndex = i;\n         }\n       });\n       return objIndex;\n    },\n    clear: function() {\n      localStorage.clear();\n    }\n  };\n  return self;\n};\n","//The appt constructur creates a new\n//appt\napp.Appointment = function (spec) {\n  //TODO Add Constructor Function\n\n  return {\n    title: spec.title,\n    date: spec.date,\n    time: spec.time,\n    street: spec.street,\n    cityState: spec.cityState,\n    address: spec.street + ', ' + spec.cityState,\n    aptId: Date.now(),\n    equal: function (otherUser) {\n      return self.aptId === otherUser.aptId;\n    }\n  };\n};\n","app.editAppointment = function() {\n\n  var appointments = app.aptManager.query();\n  var pageID = 'appt-edit';\n  // console.log( appointments[0] );\n\n  $('.wrapper').html(\n    app.views['appt-edit']({ appointment: appointments[0] || {}, pageID: pageID }) );\n\n  navButtons();\n\n  // Give focus to the first input on load\n  $('.appt-edit-content .appt-edit-title').focus();\n\n  // Add Event Listener to Form\n  // Create appt variable from createApptFromForm function\n  // Add appt to datastore\n  $('.appt-edit-content').submit(function() {\n    var appt = createApptFromForm();\n    app.aptManager.add(appt);\n    resetApptForm();\n\n\n    return false;\n  });\n\n  // Creates newAppt Object\n  // Passes newAppt to app.Appointment function\n  // Returns object\n  function createApptFromForm() {\n    var newAppt = {\n      title: $('.appt-edit-title').val(),\n      date: $('.appt-edit-date').val(),\n      time: $('.appt-edit-time').val(),\n      street: $('.appt-edit-street').val(),\n      cityState: $('.appt-edit-city-state').val()\n    };\n\n    return app.Appointment(newAppt);\n  }\n\n  // Resets the inputs in the user form\n  function resetApptForm() {\n    $('.appt-edit-content input').val('');\n    $('.appt-edit-content .appt-edit-title').focus();\n  }\n};\n","$(function () {\n  //TODO: manage all the list appts\n\n  app.listAppointments = function () {\n    var appointments = app.aptManager.query();\n    // console.log('hey');\n    var pageID = 'appt-listing';\n\n    $('.wrapper').html(\n      app.views['appt-listing']({ appointments: appointments, pageID: pageID }) );\n\n    navButtons();\n    listingsPageButtons();\n  };\n  app.viewAppointment = function () {\n\n    var appointments = app.aptManager.query();\n    var pageID = 'appt-view';\n\n    $('.wrapper').html(\n      app.views['appt-view']({ appointment: appointments[0], pageID: pageID }) );\n\n    navButtons();\n  };\n\n});\n","$(function() {\n\n  app.registerPages = function() {\n    app.manager.registerPage('listings', function() {\n      var pageID = 'appt-listing';\n\n      $('.wrapper').html(\n        app.views['appt-listing']({ appointments: app.aptManager.query(), pageID: pageID }) );\n\n      navButtons();\n      listingsPageButtons();\n    });\n    app.manager.registerPage('view', function(appt) {\n      var pageID = 'appt-view';\n\n      $('.wrapper').html(\n        app.views['appt-view']({ appointment: appt, pageID: pageID }) );\n\n      navButtons();\n    });\n    app.manager.registerPage('edit', function() {\n      var pageID = 'appt-edit';\n\n      $('.wrapper').html(\n        app.views['appt-edit']({ appointment: appointments[0], pageID: pageID }) );\n\n      navButtons();\n\n      // Give focus to the first input on load\n      $('.appt-edit-content .appt-edit-title').focus();\n\n      // Add Event Listener to Form\n      // Create appt variable from createApptFromForm function\n      // Add appt to datastore\n      $('.appt-edit-content').submit(function() {\n        var appt = createApptFromForm();\n        app.aptManager.add(appt);\n        resetApptForm();\n\n        return false;\n      });\n\n      // Creates newAppt Object\n      // Passes newAppt to app.Appointment function\n      // Returns object\n      function createApptFromForm() {\n        var newAppt = {\n          title: $('.appt-edit-title').val(),\n          date: $('.appt-edit-date').val(),\n          time: $('.appt-edit-time').val(),\n          street: $('.appt-edit-street').val(),\n          cityState: $('.appt-edit-city-state').val()\n        };\n\n        return app.Appointment(newAppt);\n      }\n\n      // Resets the inputs in the user form\n      function resetApptForm() {\n        $('.appt-edit-content input').val('');\n        $('.appt-edit-content .appt-edit-title').focus();\n      }\n\n    });\n  };\n\n\n  // display appointments we have currently\n  app.manager = app.PageManager();\n  app.aptManager = app.AppointmentStore();\n  app.registerPages();\n\n  // var appointments = app.aptManager.query();\n  app.manager.goTo('listings');\n\n\n\n});\n","app.PageManager = function (rootElement) {\n    //TODO: implement an obect which makes changing pages\n    //convenient and relatively easy\n\n    //registerPage(name, callback)\n    //goToPage(name);\n\n  //Grabbing all our templates and storing them\n\n\n  var pages = {};\n\n  return {\n    registerPage: function (name, callback) {\n\n      // Where do we store the templates??\n      pages[name] = callback;\n    },\n\n    goTo: function(name, data) {\n      pages[name](data);\n    }\n  };\n};\napp.views = {};\n\n$('script[type=\"type/html\"]').each(function () {\n\n  var elem = $(this).remove();\n\n  app.views[elem.attr('id')] = _.template(elem.html(), { 'variable': 'm'});\n});\n","$(function() {\n\n\n\n});\n","app.viewAppointment = function() {\n  var pageID = 'appt-view';\n\n  $('.wrapper').html(\n    app.views['appt-view']({ appointments: appointment[0], pageID: pageID }) );\n\n  navButtons();\n  listingsPageEvents();\n\n};\n","// Open Weather Map APPID (API key) 5bc49b99acf94aa06a77511100e043f2\n\n//http://api.openweathermap.org/data/2.5/forecast?q=Durham,nc\n\n$.getJSON('http://api.openweathermap.org/data/2.5/forecast?q=Durham,nc')\n  .done(function (data) {\n    var K = (data.list[0].main.temp)\n    var temp = (K - 273.15)* 1.8000 + 32.00\n    // var condition = ()\n    console.log(temp);\n    console.log(data);\n  })\n  .fail(function (request, status, err) {\n    console.log(err);\n    alert('Failed to connect to GitHub... See console for details.');\n  });\n\n$.getJSON('http://api.openweathermap.org/data/2.5/weather?q=Durham,NC')\n  .done(function (data) {\n    var K = (data.main.temp)\n    var temp = (K - 273.15)* 1.8000 + 32.00\n    // var condition = ()\n    console.log(temp);\n    console.log(data);\n  })\n  .fail(function (request, status, err) {\n    console.log(err);\n    alert('Failed to connect to GitHub... See console for details.');\n  });\n"],"sourceRoot":"/source/"}